name: Tests

on:
  push:

jobs:
  unit-tests:
    name: Unit Tests (PHP ${{matrix.php}}, ${{matrix.os}})
    runs-on: ${{matrix.os}}

    strategy:
      matrix:
        php: [7.0, 7.1, 7.2, 7.3, 7.4]
        os: [ubuntu-latest, windows-latest]
        exclude:
          - os: windows-latest
            php: 7.1
          - os: windows-latest
            php: 7.2
          - os: windows-latest
            php: 7.3
          - os: windows-latest
            php: 7.4

    steps:
      - name: Checkout code
        uses: actions/checkout@v1

      - name: Setup PHP
        uses: shivammathur/setup-php@v1
        with:
          php-version: ${{matrix.php}}
          extensions: ctype, dom, json, mbstring, openssl, xml, zip, zlib
          coverage: none

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ${{steps.composer-cache.outputs.dir}}
          key: ${{matrix.php}}-${{runner.os}}-unit-tests-composer-${{hashFiles('**/composer.json')}}
          restore-keys: ${{matrix.php}}-${{runner.os}}-unit-tests-composer-

      - name: Setup Problem Matchers for PHPUnit
        run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Install dependencies (stable)
        if: "matrix.php != '7.0'"
        run: composer update --prefer-stable --prefer-dist --no-interaction --no-suggest --no-progress

      - name: Install dependencies (lowest)
        if: "matrix.php == '7.0'"
        run: composer update --prefer-lowest --prefer-dist --no-interaction --no-suggest --no-progress

      - name: Run PHPUnit
        run: vendor/bin/phpunit --testsuite=unit

  static-code-analysis:
    name: Static Code Analysis
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v1

      - name: Setup PHP
        uses: shivammathur/setup-php@v1
        with:
          php-version: 7.4
          extensions: ctype, dom, json, mbstring, openssl, xml, zip, zlib, grpc
          tools: composer, pecl
          coverage: none

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ${{steps.composer-cache.outputs.dir}}
          key: ${{matrix.php}}-${{runner.os}}-static-code-analysis-composer-${{hashFiles('**/composer.json')}}
          restore-keys: ${{matrix.php}}-${{runner.os}}-static-code-analysis-composer-

      - name: Install dependencies
        run: |
          composer install --prefer-dist --no-interaction --no-suggest --no-progress
          composer require google/cloud-firestore:^1.8

      - name: Run PHPStan
        run: vendor/bin/phpstan analyse src tests -c phpstan.neon --level=max --no-progress

  coding-standards:
    name: Coding Standards
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v1

      - name: Setup PHP
        uses: shivammathur/setup-php@v1
        with:
          php-version: 7.4
          extensions: ctype, dom, json, mbstring, openssl, xml, zip, zlib
          coverage: none

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ${{steps.composer-cache.outputs.dir}}
          key: ${{matrix.php}}-${{runner.os}}-coding-standards-composer-${{hashFiles('**/composer.json')}}
          restore-keys: ${{matrix.php}}-${{runner.os}}-coding-standards-composer-

      - name: Install dependencies
        run: composer install --prefer-dist --no-interaction --no-suggest --no-progress

      - name: Run PHP CS Fixer
        run: vendor/bin/php-cs-fixer fix --config=.php_cs.dist -v --dry-run --stop-on-violation --using-cache=no

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [unit-tests, coding-standards, static-code-analysis]

    steps:
      - name: Checkout code
        uses: actions/checkout@v1
        with:
          fetch-depth: 0

      - name: Setup PHP
        uses: shivammathur/setup-php@v1
        with:
          php-version: 7.4
          extensions: ctype, dom, json, mbstring, openssl, xml, zip, zlib, grpc
          tools: composer, pecl
          coverage: xdebug

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v1
        with:
          path: ${{steps.composer-cache.outputs.dir}}
          key: ${{matrix.php}}-${{runner.os}}-integration-tests-composer-${{hashFiles('**/composer.json')}}
          restore-keys: ${{matrix.php}}-${{runner.os}}-integration-tests-composer-

      - name: Setup Problem Matchers for PHPUnit
        run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Install dependencies
        run: |
          composer install --prefer-dist --no-interaction --no-suggest --no-progress
          composer require google/cloud-firestore:^1.8

      - name: Run Code Coverage
        env:
          FIREBASE_CREDENTIALS: ${{secrets.FIREBASE_CREDENTIALS}}
          TEST_REGISTRATION_TOKENS: ${{secrets.TEST_REGISTRATION_TOKENS}}
        run: vendor/bin/phpunit --coverage-clover=coverage.xml --log-junit=test-report.xml

      - name: Upload reports to sonarcloud
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Upload coverage to CodeCov
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
